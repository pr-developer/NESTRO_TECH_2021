function init() {

  // Abstract colors
  var Colors = {
    "red": "#be4b15",
    "green": "#52ce60",
    "orange": "#f08c00"
  }

  var ColorNames = [];
  for (var n in Colors) ColorNames.push(n);

  // a conversion function for translating general color names to specific colors
  function colorFunc(colorname) {
    var c = Colors[colorname]
    if (c) return c;
    return "gray";
  }

  // Icons derived from SVG paths designed by freepik: http://www.freepik.com/
  var Icons = {};

  Icons.it_metric = "M 186.96,87.72\
  C 183.11,86.18 178.75,88.05 177.21,91.89\
    177.21,91.89 155.53,145.99 155.53,145.99\
    154.52,145.88 153.51,145.81 152.50,145.81\
    141.94,145.81 132.41,151.66 127.62,161.07\
    122.60,170.91 123.89,182.66 131.05,192.51\
    131.78,193.52 132.70,194.44 133.71,195.18\
    139.53,199.41 146.03,201.64 152.50,201.64\
    163.06,201.64 172.59,195.80 177.39,186.38\
    182.40,176.54 181.11,164.79 173.96,154.95\
    173.23,153.94 172.31,153.01 171.29,152.27\
    170.74,151.87 170.18,151.51 169.62,151.15\
    169.62,151.15 191.13,97.47 191.13,97.47\
    192.67,93.62 190.80,89.26 186.96,87.72 Z\
  M 164.02,179.57\
  C 161.80,183.93 157.39,186.64 152.50,186.64\
    149.30,186.64 146.07,185.52 142.91,183.31\
    139.31,178.14 138.60,172.54 140.98,167.88\
    143.20,163.52 147.61,160.81 152.50,160.81\
    154.06,160.81 155.62,161.08 157.18,161.60\
    157.23,161.62 157.28,161.65 157.33,161.67\
    157.49,161.74 157.66,161.79 157.82,161.84\
    159.25,162.39 160.68,163.15 162.09,164.13\
    165.69,169.30 166.40,174.91 164.02,179.57 Z\
  M 305.00,173.73\
  C 305.00,132.06 288.20,94.26 261.03,66.71\
    260.82,66.42 260.59,66.15 260.33,65.89\
    260.08,65.63 259.80,65.41 259.52,65.20\
    231.97,38.02 194.16,21.23 152.50,21.23\
    110.84,21.23 73.03,38.02 45.48,65.20\
    45.20,65.41 44.92,65.64 44.67,65.89\
    44.41,66.15 44.18,66.42 43.97,66.71\
    16.80,94.26 0.00,132.06 0.00,173.73\
    0.00,214.46 15.86,252.74 44.66,281.55\
    44.66,281.55 44.66,281.56 44.67,281.56\
    44.67,281.56 44.67,281.56 44.68,281.57\
    44.68,281.57 44.68,281.57 44.69,281.58\
    46.15,283.04 48.07,283.77 49.99,283.77\
    51.91,283.77 53.83,283.04 55.29,281.58\
    55.42,281.45 55.53,281.32 55.65,281.19\
    55.65,281.19 78.76,258.07 78.76,258.07\
    81.69,255.14 81.69,250.40 78.76,247.47\
    75.83,244.54 71.08,244.54 68.15,247.47\
    68.15,247.47 50.12,265.50 50.12,265.50\
    29.08,242.10 16.88,212.65 15.21,181.23\
    15.21,181.23 40.71,181.23 40.71,181.23\
    44.85,181.23 48.21,177.87 48.21,173.73\
    48.21,169.58 44.85,166.23 40.71,166.23\
    40.71,166.23 15.21,166.23 15.21,166.23\
    16.95,133.95 29.88,104.61 50.16,82.00\
    50.16,82.00 68.15,99.98 68.15,99.98\
    69.61,101.45 71.53,102.18 73.45,102.18\
    75.37,102.18 77.29,101.45 78.76,99.98\
    81.69,97.05 81.69,92.31 78.76,89.38\
    78.76,89.38 60.77,71.39 60.77,71.39\
    83.38,51.10 112.73,38.18 145.00,36.43\
    145.00,36.43 145.00,61.94 145.00,61.94\
    145.00,66.08 148.36,69.44 152.50,69.44\
    156.64,69.44 160.00,66.08 160.00,61.94\
    160.00,61.94 160.00,36.43 160.00,36.43\
    192.27,38.18 221.62,51.10 244.23,71.39\
    244.23,71.39 226.24,89.38 226.24,89.38\
    223.31,92.31 223.31,97.05 226.24,99.98\
    227.71,101.45 229.63,102.18 231.54,102.18\
    233.46,102.18 235.38,101.45 236.85,99.98\
    236.85,99.98 254.83,82.00 254.83,82.00\
    275.12,104.61 288.05,133.95 289.79,166.23\
    289.79,166.23 264.29,166.23 264.29,166.23\
    260.14,166.23 256.79,169.58 256.79,173.73\
    256.79,177.87 260.14,181.23 264.29,181.23\
    264.29,181.23 289.79,181.23 289.79,181.23\
    288.11,212.65 275.91,242.10 254.88,265.50\
    254.88,265.50 236.85,247.47 236.85,247.47\
    233.92,244.54 229.17,244.54 226.24,247.47\
    223.31,250.40 223.31,255.15 226.24,258.07\
    226.24,258.07 249.73,281.56 249.73,281.56\
    251.19,283.02 253.11,283.76 255.03,283.76\
    255.99,283.76 256.95,283.57 257.85,283.21\
    258.75,282.84 259.60,282.29 260.33,281.56\
    289.14,252.75 305.00,214.46 305.00,173.73 Z";

  Icons.it_service =
    "M 37.50,27.50\
           C 37.50,27.50 2.50,27.50 2.50,27.50\
             1.12,27.50 0.00,28.62 0.00,30.00\
             0.00,30.00 0.00,37.50 0.00,37.50\
             0.00,38.88 1.12,40.00 2.50,40.00\
             2.50,40.00 37.50,40.00 37.50,40.00\
             38.88,40.00 40.00,38.88 40.00,37.50\
             40.00,37.50 40.00,30.00 40.00,30.00\
             40.00,28.62 38.88,27.50 37.50,27.50 Z\
           M 38.75,37.50\
           C 38.75,38.19 38.19,38.75 37.50,38.75\
             37.50,38.75 2.50,38.75 2.50,38.75\
             1.81,38.75 1.25,38.19 1.25,37.50\
             1.25,37.50 1.25,30.00 1.25,30.00\
             1.25,29.31 1.81,28.75 2.50,28.75\
             2.50,28.75 37.50,28.75 37.50,28.75\
             38.19,28.75 38.75,29.31 38.75,30.00\
             38.75,30.00 38.75,37.50 38.75,37.50 Z\
           M 35.00,33.75\
           C 35.00,34.78 34.16,35.62 33.12,35.62\
             32.09,35.62 31.25,34.78 31.25,33.75\
             31.25,32.71 32.09,31.87 33.12,31.87\
             34.16,31.87 35.00,32.71 35.00,33.75 Z\
           M 17.50,33.13\
           C 17.50,33.13 5.00,33.13 5.00,33.13\
             4.66,33.13 4.38,33.41 4.38,33.75\
             4.38,34.09 4.66,34.37 5.00,34.37\
             5.00,34.37 17.50,34.37 17.50,34.37\
             17.84,34.37 18.12,34.09 18.12,33.75\
             18.12,33.41 17.84,33.13 17.50,33.13 Z\
           M 37.50,13.75\
           C 37.50,13.75 2.50,13.75 2.50,13.75\
             1.12,13.75 0.00,14.87 0.00,16.25\
             0.00,16.25 0.00,23.75 0.00,23.75\
             0.00,25.13 1.12,26.25 2.50,26.25\
             2.50,26.25 37.50,26.25 37.50,26.25\
             38.88,26.25 40.00,25.13 40.00,23.75\
             40.00,23.75 40.00,16.25 40.00,16.25\
             40.00,14.87 38.88,13.75 37.50,13.75 Z\
           M 38.75,23.75\
           C 38.75,24.44 38.19,25.00 37.50,25.00\
             37.50,25.00 2.50,25.00 2.50,25.00\
             1.81,25.00 1.25,24.44 1.25,23.75\
             1.25,23.75 1.25,16.25 1.25,16.25\
             1.25,15.56 1.81,15.00 2.50,15.00\
             2.50,15.00 37.50,15.00 37.50,15.00\
             38.19,15.00 38.75,15.56 38.75,16.25\
             38.75,16.25 38.75,23.75 38.75,23.75 Z\
           M 35.00,20.00\
           C 35.00,21.03 34.16,21.87 33.12,21.87\
             32.09,21.87 31.25,21.03 31.25,20.00\
             31.25,18.96 32.09,18.12 33.12,18.12\
             34.16,18.12 35.00,18.96 35.00,20.00 Z\
           M 17.50,19.38\
           C 17.50,19.38 5.00,19.38 5.00,19.38\
             4.66,19.38 4.38,19.66 4.38,20.00\
             4.38,20.34 4.66,20.62 5.00,20.62\
             5.00,20.62 17.50,20.62 17.50,20.62\
             17.84,20.62 18.12,20.34 18.12,20.00\
             18.12,19.66 17.84,19.38 17.50,19.38 Z\
           M 37.50,0.00\
           C 37.50,0.00 2.50,0.00 2.50,0.00\
             1.12,0.00 0.00,1.12 0.00,2.50\
             0.00,2.50 0.00,10.00 0.00,10.00\
             0.00,11.38 1.12,12.50 2.50,12.50\
             2.50,12.50 37.50,12.50 37.50,12.50\
             38.88,12.50 40.00,11.38 40.00,10.00\
             40.00,10.00 40.00,2.50 40.00,2.50\
             40.00,1.12 38.88,0.00 37.50,0.00 Z\
           M 38.75,10.00\
           C 38.75,10.69 38.19,11.25 37.50,11.25\
             37.50,11.25 2.50,11.25 2.50,11.25\
             1.81,11.25 1.25,10.69 1.25,10.00\
             1.25,10.00 1.25,2.50 1.25,2.50\
             1.25,1.81 1.81,1.25 2.50,1.25\
             2.50,1.25 37.50,1.25 37.50,1.25\
             38.19,1.25 38.75,1.81 38.75,2.50\
             38.75,2.50 38.75,10.00 38.75,10.00 Z\
           M 35.00,6.25\
           C 35.00,7.28 34.16,8.12 33.12,8.12\
             32.09,8.12 31.25,7.28 31.25,6.25\
             31.25,5.21 32.09,4.37 33.12,4.37\
             34.16,4.37 35.00,5.21 35.00,6.25 Z\
           M 17.50,5.63\
           C 17.50,5.63 5.00,5.63 5.00,5.63\
             4.66,5.63 4.38,5.91 4.38,6.25\
             4.38,6.59 4.66,6.87 5.00,6.87\
             5.00,6.87 17.50,6.87 17.50,6.87\
             17.84,6.87 18.12,6.59 18.12,6.25\
             18.12,5.91 17.84,5.63 17.50,5.63 Z";

  Icons.bs_service =
    "M 23.55,0.59\
    C 23.55,0.59 6.19,0.59 6.19,0.59\
      5.39,0.59 4.74,1.23 4.74,2.04\
      4.74,2.04 4.74,6.23 4.74,6.23\
      4.74,6.23 6.19,6.23 6.19,6.23\
      6.19,6.23 6.19,4.22 6.19,4.22\
      6.19,4.22 23.55,4.22 23.55,4.22\
      23.55,4.22 23.55,16.51 23.55,16.51\
      23.55,16.51 21.03,16.51 21.03,16.51\
      21.03,16.51 21.03,17.95 21.03,17.95\
      21.03,17.95 23.55,17.95 23.55,17.95\
      24.35,17.95 25.00,17.30 25.00,16.51\
      25.00,16.51 25.00,2.04 25.00,2.04\
      25.00,1.23 24.35,0.59 23.55,0.59 Z\
    M 7.28,3.12\
    C 6.88,3.12 6.55,2.80 6.55,2.40\
      6.55,2.00 6.88,1.68 7.28,1.68\
      7.67,1.68 8.00,1.99 8.00,2.40\
      8.00,2.80 7.67,3.12 7.28,3.12 Z\
    M 9.45,3.12\
    C 9.04,3.12 8.72,2.80 8.72,2.40\
      8.72,2.00 9.04,1.68 9.45,1.68\
      9.85,1.68 10.17,1.99 10.17,2.40\
      10.17,2.80 9.84,3.12 9.45,3.12 Z\
    M 11.66,3.12\
    C 11.26,3.12 10.94,2.80 10.94,2.40\
      10.94,2.00 11.26,1.68 11.66,1.68\
      12.06,1.68 12.38,1.99 12.38,2.40\
      12.38,2.80 12.06,3.12 11.66,3.12 Z\
    M 23.55,2.77\
    C 23.55,2.77 13.42,2.77 13.42,2.77\
      13.42,2.77 13.42,2.05 13.42,2.05\
      13.42,2.05 23.55,2.05 23.55,2.05\
      23.55,2.05 23.55,2.77 23.55,2.77 Z\
    M 18.81,7.05\
    C 18.81,7.05 1.45,7.05 1.45,7.05\
      0.65,7.05 0.00,7.69 0.00,8.49\
      0.00,8.49 0.00,22.96 0.00,22.96\
      0.00,23.76 0.65,24.41 1.45,24.41\
      1.45,24.41 18.81,24.41 18.81,24.41\
      19.61,24.41 20.26,23.76 20.26,22.96\
      20.26,22.96 20.26,8.49 20.26,8.49\
      20.26,7.69 19.61,7.05 18.81,7.05 Z\
    M 6.92,8.13\
    C 7.32,8.13 7.64,8.46 7.64,8.86\
      7.64,9.26 7.32,9.58 6.92,9.58\
      6.52,9.58 6.20,9.26 6.20,8.86\
      6.20,8.46 6.52,8.13 6.92,8.13 Z\
    M 4.71,8.13\
    C 5.10,8.13 5.43,8.46 5.43,8.86\
      5.43,9.26 5.10,9.58 4.71,9.58\
      4.30,9.58 3.98,9.26 3.98,8.86\
      3.98,8.46 4.30,8.13 4.71,8.13 Z\
    M 2.53,8.13\
    C 2.93,8.13 3.26,8.46 3.26,8.86\
      3.26,9.26 2.93,9.58 2.53,9.58\
      2.14,9.58 1.81,9.26 1.81,8.86\
      1.81,8.46 2.14,8.13 2.53,8.13 Z\
    M 18.81,22.96\
    C 18.81,22.96 1.45,22.96 1.45,22.96\
      1.45,22.96 1.45,10.68 1.45,10.68\
      1.45,10.68 18.81,10.68 18.81,10.68\
      18.81,10.68 18.81,22.96 18.81,22.96 Z\
    M 18.81,9.24\
    C 18.81,9.24 8.69,9.24 8.69,9.24\
      8.69,9.24 8.69,8.51 8.69,8.51\
      8.69,8.51 18.81,8.51 18.81,8.51\
      18.81,8.51 18.81,9.24 18.81,9.24\
      18.81,9.24 18.81,9.24 18.81,9.24 Z"

  Icons.bu_service =
    "M 107.01,460.49\
    C 99.69,453.17 87.81,453.17 80.49,460.49\
      73.17,467.81 73.17,479.69 80.49,487.01\
      80.49,487.01 98.48,505.00 98.48,505.00\
      98.48,505.00 68.75,505.00 68.75,505.00\
      51.52,505.00 37.50,490.98 37.50,473.75\
      37.50,473.75 37.50,398.75 37.50,398.75\
      37.50,381.52 51.52,367.50 68.75,367.50\
      68.75,367.50 143.75,367.50 143.75,367.50\
      154.11,367.50 162.50,359.11 162.50,348.75\
      162.50,338.39 154.11,330.00 143.75,330.00\
      143.75,330.00 68.75,330.00 68.75,330.00\
      30.84,330.00 0.00,360.84 0.00,398.75\
      0.00,398.75 0.00,473.75 0.00,473.75\
      0.00,511.66 30.84,542.50 68.75,542.50\
      68.75,542.50 98.48,542.50 98.48,542.50\
      98.48,542.50 80.49,560.49 80.49,560.49\
      73.17,567.81 73.17,579.69 80.49,587.01\
      84.15,590.67 88.95,592.50 93.75,592.50\
      98.55,592.50 103.35,590.67 107.01,587.01\
      107.01,587.01 157.01,537.01 157.01,537.01\
      164.33,529.69 164.33,517.81 157.01,510.49\
      157.01,510.49 107.01,460.49 107.01,460.49 Z\
    M 157.01,510.49M 571.25,97.50\
    C 571.25,97.50 496.25,97.50 496.25,97.50\
      485.89,97.50 477.50,105.89 477.50,116.25\
      477.50,126.61 485.89,135.00 496.25,135.00\
      496.25,135.00 571.25,135.00 571.25,135.00\
      588.48,135.00 602.50,149.02 602.50,166.25\
      602.50,166.25 602.50,241.25 602.50,241.25\
      602.50,258.48 588.48,272.50 571.25,272.50\
      571.25,272.50 541.52,272.50 541.52,272.50\
      541.52,272.50 559.51,254.51 559.51,254.51\
      566.83,247.19 566.83,235.31 559.51,227.99\
      552.19,220.67 540.31,220.67 532.99,227.99\
      532.99,227.99 482.99,277.99 482.99,277.99\
      475.67,285.31 475.67,297.18 482.99,304.51\
      482.99,304.51 532.99,354.51 532.99,354.51\
      536.65,358.17 541.45,360.00 546.25,360.00\
      551.05,360.00 555.85,358.17 559.51,354.51\
      566.83,347.19 566.83,335.31 559.51,327.99\
      559.51,327.99 541.52,310.00 541.52,310.00\
      541.52,310.00 571.25,310.00 571.25,310.00\
      609.16,310.00 640.00,279.16 640.00,241.25\
      640.00,241.25 640.00,166.25 640.00,166.25\
      640.00,128.34 609.16,97.50 571.25,97.50\
      571.25,97.50 571.25,97.50 571.25,97.50 Z\
    M 571.25,97.50M 432.50,465.00\
    C 432.50,465.00 207.50,465.00 207.50,465.00\
      197.14,465.00 188.75,473.39 188.75,483.75\
      188.75,483.75 188.75,621.25 188.75,621.25\
      188.75,631.61 197.14,640.00 207.50,640.00\
      207.50,640.00 432.50,640.00 432.50,640.00\
      442.86,640.00 451.25,631.61 451.25,621.25\
      451.25,621.25 451.25,483.75 451.25,483.75\
      451.25,473.39 442.86,465.00 432.50,465.00 Z\
    M 432.50,465.00M 432.50,232.50\
    C 432.50,232.50 207.50,232.50 207.50,232.50\
      197.14,232.50 188.75,240.89 188.75,251.25\
      188.75,251.25 188.75,388.75 188.75,388.75\
      188.75,399.11 197.14,407.50 207.50,407.50\
      207.50,407.50 432.50,407.50 432.50,407.50\
      442.86,407.50 451.25,399.11 451.25,388.75\
      451.25,388.75 451.25,251.25 451.25,251.25\
      451.25,240.89 442.86,232.50 432.50,232.50 Z\
    M 432.50,232.50M 432.50,0.00\
    C 432.50,0.00 207.50,0.00 207.50,0.00\
      197.14,0.00 188.75,8.39 188.75,18.75\
      188.75,18.75 188.75,156.25 188.75,156.25\
      188.75,166.61 197.14,175.00 207.50,175.00\
      207.50,175.00 432.50,175.00 432.50,175.00\
      442.86,175.00 451.25,166.61 451.25,156.25\
      451.25,156.25 451.25,18.75 451.25,18.75\
      451.25,8.39 442.86,0.00 432.50,0.00 Z\
    M 432.50,0.00";

  Icons.br_service =
    "M 445.78,202.71\
    C 437.50,202.71 430.79,209.43 430.79,217.71\
      430.79,217.71 430.79,295.59 430.79,295.59\
      430.79,303.87 437.50,310.58 445.78,310.58\
      454.06,310.58 460.78,303.87 460.78,295.59\
      460.78,295.59 460.78,217.71 460.78,217.71\
      460.78,209.43 454.06,202.71 445.78,202.71 Z\
    M 397.98,162.72\
    C 389.70,162.72 382.99,169.44 382.99,177.72\
      382.99,177.72 382.99,295.59 382.99,295.59\
      382.99,303.87 389.70,310.59 397.98,310.59\
      406.26,310.59 412.98,303.87 412.98,295.59\
      412.98,295.59 412.98,177.72 412.98,177.72\
      412.98,169.44 406.26,162.72 397.98,162.72 Z\
    M 350.21,122.73\
    C 341.93,122.73 335.22,129.44 335.22,137.73\
      335.22,137.73 335.22,295.59 335.22,295.59\
      335.22,303.87 341.93,310.59 350.21,310.59\
      358.50,310.59 365.21,303.87 365.21,295.59\
      365.21,295.59 365.21,137.73 365.21,137.73\
      365.21,129.44 358.50,122.73 350.21,122.73 Z\
    M 303.22,222.71\
    C 294.94,222.71 288.23,229.42 288.23,237.71\
      288.23,237.71 288.23,295.59 288.23,295.59\
      288.23,303.87 294.94,310.58 303.22,310.58\
      311.51,310.58 318.22,303.87 318.22,295.59\
      318.22,295.59 318.22,237.71 318.22,237.71\
      318.22,229.42 311.51,222.71 303.22,222.71 Z\
    M 493.63,35.20\
    C 493.63,35.20 18.37,35.20 18.37,35.20\
      8.24,35.20 0.00,43.44 0.00,53.57\
      0.00,53.57 0.00,347.95 0.00,347.95\
      0.00,358.08 8.24,366.33 18.37,366.33\
      18.37,366.33 27.08,366.33 27.08,366.33\
      27.08,366.33 4.66,388.75 4.66,388.75\
      -1.20,394.60 -1.20,404.10 4.66,409.96\
      7.59,412.88 11.43,414.35 15.26,414.35\
      19.10,414.35 22.94,412.88 25.87,409.96\
      25.87,409.96 69.50,366.33 69.50,366.33\
      69.50,366.33 208.23,366.33 208.23,366.33\
      208.23,366.33 208.23,427.10 208.23,427.10\
      183.51,431.02 159.36,438.01 136.05,448.02\
      128.44,451.29 124.92,460.11 128.19,467.72\
      131.46,475.33 140.28,478.85 147.89,475.58\
      182.24,460.82 218.62,453.33 256.01,453.31\
      256.05,453.31 256.08,453.31 256.11,453.31\
      293.47,453.31 329.82,460.78 364.14,475.50\
      364.14,475.50 364.33,475.58 364.33,475.58\
      366.26,476.41 368.27,476.80 370.25,476.80\
      376.06,476.80 381.59,473.40 384.03,467.72\
      387.30,460.11 383.78,451.29 376.17,448.02\
      376.17,448.02 375.98,447.93 375.98,447.93\
      352.66,437.94 328.50,430.97 303.77,427.06\
      303.77,427.06 303.77,366.33 303.77,366.33\
      303.77,366.33 493.63,366.33 493.63,366.33\
      503.76,366.33 512.00,358.08 512.00,347.95\
      512.00,347.95 512.00,53.57 512.00,53.57\
      512.00,43.44 503.76,35.20 493.63,35.20 Z\
    M 273.77,423.85\
    C 273.77,423.85 273.77,423.85 273.77,423.85\
      267.91,423.51 262.02,423.32 256.11,423.32\
      256.08,423.32 256.04,423.32 256.00,423.32\
      250.05,423.32 244.13,423.52 238.23,423.86\
      238.23,423.86 238.23,366.33 238.23,366.33\
      238.23,366.33 273.77,366.33 273.77,366.33\
      273.77,366.33 273.77,423.85 273.77,423.85\
      273.77,423.85 273.77,423.85 273.77,423.85 Z\
    M 482.01,336.33\
    C 482.01,336.33 99.49,336.33 99.49,336.33\
      99.49,336.33 137.13,298.69 137.13,298.69\
      149.07,304.78 162.58,308.22 176.87,308.22\
      225.25,308.22 264.62,268.86 264.62,220.47\
      264.62,172.09 225.25,132.73 176.87,132.73\
      128.49,132.73 89.12,172.09 89.12,220.47\
      89.12,243.67 98.17,264.78 112.92,280.49\
      112.92,280.49 57.08,336.33 57.08,336.33\
      57.08,336.33 29.99,336.33 29.99,336.33\
      29.99,336.33 29.99,65.19 29.99,65.19\
      29.99,65.19 482.01,65.19 482.01,65.19\
      482.01,65.19 482.01,336.33 482.01,336.33 Z\
    M 119.11,220.47\
    C 119.11,188.63 145.02,162.72 176.87,162.72\
      208.72,162.72 234.62,188.63 234.62,220.47\
      234.62,252.32 208.72,278.23 176.87,278.23\
      145.02,278.23 119.11,252.32 119.11,220.47 Z";

  Icons.bp_service =
    "F M244.414,133.231 L180.857,133.231 178.509,156.191 250.527,192.94z\
    M179.027,276.244 262.328,308.179 253.451,221.477z\
    M267.717,360.866 264.845,332.807 220.179,360.866z\
    M167.184,266.775 247.705,207.524 176.95,171.421z\
    M157.551,360.866 192.975,360.866 256.447,320.996 165.218,286.021z\
    M141.262,374.366 141.262,397.935 161.396,397.935 161.396,425.268 179.197,425.268 179.197,397.935\
    246.07,397.935 246.07,425.268 263.872,425.268 263.872,397.935 284.006,397.935 284.006,374.366z";

  Icons.ot_and = "M 225.00,19.42\
  C 238.37,17.80 260.49,20.32 274.00,22.59\
    344.89,34.51 405.13,82.38 434.14,148.00\
    442.60,167.14 451.75,199.12 452.00,220.00\
    452.00,220.00 452.96,235.00 452.96,235.00\
    452.96,235.00 452.00,252.00 452.00,252.00\
    451.82,266.67 446.03,290.91 441.33,305.00\
    415.16,383.59 346.98,439.67 265.00,450.72\
    238.83,454.24 210.71,452.97 185.00,446.63\
    148.49,437.61 114.56,419.59 87.00,393.91\
    10.21,322.38 -2.89,201.70 55.74,115.00\
    83.51,73.94 124.45,43.04 172.00,28.72\
    181.10,25.98 196.71,22.17 206.00,21.16\
    206.00,21.16 225.00,19.42 225.00,19.42 Z\
  M 202.00,173.00\
  C 202.00,173.00 178.00,173.00 178.00,173.00\
    176.01,173.00 172.19,172.77 170.60,174.02\
    168.62,175.59 169.00,179.70 169.00,182.00\
    169.00,182.00 169.00,278.00 169.00,278.00\
    169.00,278.00 169.00,300.00 169.00,300.00\
    169.01,301.82 168.85,304.92 170.02,306.40\
    171.59,308.38 175.70,308.00 178.00,308.00\
    178.00,308.00 207.00,308.00 207.00,308.00\
    215.91,307.98 214.68,308.09 222.15,295.00\
    222.15,295.00 238.72,266.00 238.72,266.00\
    238.72,266.00 268.00,215.00 268.00,215.00\
    268.00,215.00 267.00,237.00 267.00,237.00\
    267.00,237.00 267.00,308.00 267.00,308.00\
    267.00,308.00 291.00,308.00 291.00,308.00\
    292.99,308.00 296.81,308.23 298.40,306.98\
    300.38,305.41 300.00,301.30 300.00,299.00\
    300.00,299.00 300.00,203.00 300.00,203.00\
    300.00,203.00 300.00,181.00 300.00,181.00\
    299.99,179.18 300.15,176.08 298.98,174.60\
    297.41,172.62 293.30,173.00 291.00,173.00\
    291.00,173.00 261.00,173.00 261.00,173.00\
    253.01,173.05 253.66,173.78 247.28,185.00\
    247.28,185.00 233.15,210.00 233.15,210.00\
    233.15,210.00 201.00,266.00 201.00,266.00\
    201.00,266.00 202.00,248.00 202.00,248.00\
    202.00,248.00 202.00,173.00 202.00,173.00 Z";

  Icons.ot_or = "M 225.00,19.42\
  C 238.37,17.80 260.49,20.32 274.00,22.59\
    344.89,34.51 405.13,82.38 434.14,148.00\
    442.60,167.14 451.75,199.12 452.00,220.00\
    452.00,220.00 452.96,235.00 452.96,235.00\
    452.96,235.00 452.00,252.00 452.00,252.00\
    451.82,266.67 446.03,290.91 441.33,305.00\
    415.16,383.59 346.98,439.67 265.00,450.72\
    238.83,454.24 210.71,452.97 185.00,446.63\
    148.49,437.61 114.56,419.59 87.00,393.91\
    10.21,322.38 -2.89,201.70 55.74,115.00\
    83.51,73.94 124.45,43.04 172.00,28.72\
    181.10,25.98 196.71,22.17 206.00,21.16\
    206.00,21.16 225.00,19.42 225.00,19.42 Z\
  M 91.00,187.00\
  C 91.00,187.00 65.00,187.00 65.00,187.00\
    65.00,187.00 65.00,294.00 65.00,294.00\
    65.00,294.00 93.00,294.00 93.00,294.00\
    94.91,294.00 98.10,294.12 99.82,293.40\
    103.66,291.78 109.29,279.99 111.58,276.00\
    111.58,276.00 143.00,222.00 143.00,222.00\
    143.00,222.00 142.00,245.00 142.00,245.00\
    142.00,245.00 142.00,294.00 142.00,294.00\
    142.00,294.00 168.00,294.00 168.00,294.00\
    168.00,294.00 168.00,187.00 168.00,187.00\
    168.00,187.00 140.00,187.00 140.00,187.00\
    138.23,187.00 134.94,186.86 133.38,187.57\
    130.27,188.99 124.02,201.46 122.00,205.00\
    122.00,205.00 90.00,261.00 90.00,261.00\
    90.00,261.00 91.00,187.00 91.00,187.00 Z\
  M 252.00,294.00\
  C 252.00,294.00 274.00,294.00 274.00,294.00\
    275.82,293.99 278.92,294.15 280.40,292.98\
    282.26,291.51 281.98,288.13 282.00,286.00\
    282.00,286.00 282.00,229.00 282.00,229.00\
    282.00,229.00 282.00,200.00 282.00,200.00\
    282.00,197.46 282.44,190.45 280.98,188.60\
    279.41,186.62 275.30,187.00 273.00,187.00\
    273.00,187.00 216.00,187.00 216.00,187.00\
    214.01,187.00 210.19,186.77 208.60,188.02\
    206.97,189.31 206.98,192.10 206.72,194.00\
    206.72,194.00 204.95,208.00 204.95,208.00\
    204.95,208.00 198.58,252.00 198.58,252.00\
    197.71,256.81 196.07,266.32 192.61,269.69\
    189.22,272.98 185.11,271.74 181.00,271.00\
    181.00,271.00 181.00,288.00 181.00,288.00\
    181.11,294.23 182.05,294.46 188.00,295.32\
    190.36,295.42 191.57,295.65 194.00,295.32\
    204.58,294.80 212.81,292.49 218.87,283.00\
    223.76,275.34 225.94,262.01 227.27,253.00\
    229.04,240.98 231.99,223.79 232.00,212.00\
    232.00,212.00 252.00,212.00 252.00,212.00\
    252.00,212.00 252.00,294.00 252.00,294.00 Z\
  M 330.00,187.00\
  C 330.00,187.00 304.00,187.00 304.00,187.00\
    304.00,187.00 304.00,294.00 304.00,294.00\
    304.00,294.00 332.00,294.00 332.00,294.00\
    333.80,294.00 337.07,294.14 338.67,293.43\
    342.04,291.93 348.04,279.70 350.15,276.00\
    350.15,276.00 382.00,221.00 382.00,221.00\
    382.00,221.00 381.00,237.00 381.00,237.00\
    381.00,237.00 381.00,294.00 381.00,294.00\
    381.00,294.00 407.00,294.00 407.00,294.00\
    407.00,294.00 407.00,187.00 407.00,187.00\
    407.00,187.00 379.00,187.00 379.00,187.00\
    377.12,187.00 373.89,186.88 372.21,187.60\
    368.66,189.12 362.76,201.19 360.58,205.00\
    360.58,205.00 329.00,260.00 329.00,260.00\
    329.00,260.00 330.00,239.00 330.00,239.00\
    330.00,239.00 330.00,187.00 330.00,187.00 Z";

  var IconNames = [];
  for (var n in Icons) IconNames.push(n);

  // A data binding conversion function. Given an name, return the Geometry.
  // If there is only a string, replace it with a Geometry object, which can be shared by multiple Shapes.
  function geoFunc(geoname) {
    var geo = Icons[geoname];
    if (typeof geo === "string") {
      geo = Icons[geoname] = go.Geometry.parse(geo, true);
    }
    return geo;
  }


  var $ = go.GraphObject.make;  // for conciseness in defining templates
  myDiagram = $(go.Diagram, "myDiagramDiv",  // create a Diagram for the DIV HTML element
    {
      initialAutoScale: go.Diagram.Uniform,  // scale to show all of the contents
      "ChangedSelection": onSelectionChanged, // view additional information
      "draggingTool.gridSnapCellSize": new go.Size(10, 1),
      "draggingTool.isGridSnapEnabled": true,
      "undoManager.isEnabled": true,
      "ModelChanged": function(e) {     // just for demonstration purposes,
        if (e.isTransactionFinished) {  // show the model data in the page's TextArea
          document.getElementById("mySavedModel").textContent = e.model.toJson();
        }
      }
    });

  myDiagram.nodeTemplate =
    $(go.Node, "Spot",
      {
        locationObjectName: "PORT",
        locationSpot: go.Spot.Top,  // location point is the middle top of the PORT
        linkConnected: updatePortHeight,
        linkDisconnected: updatePortHeight,
        toolTip:
          $("ToolTip",
            $(go.TextBlock, { margin: 4, width: 240 },
              new go.Binding("text", "", function(data) { return /*data.text + ":\n\n" + */data.description; }))
          )
      },
      new go.Binding("location", "pos", go.Point.parse).makeTwoWay(go.Point.stringify),
      // The main element of the Spot panel is a vertical panel housing an optional icon,
      // plus a rectangle that acts as the port
      $(go.Panel, "Vertical",
        $(go.Shape,
          {
            width: 40, height: 0,
            stroke: null, strokeWidth: 0, fill: "gray"
          },
          new go.Binding("height", "icon", function() { return 40; }),
          new go.Binding("fill", "color", colorFunc),
          new go.Binding("geometry", "icon", geoFunc)),
        $(go.Shape,
          {
            name: "PORT",
            width: 40, height: 6, margin: new go.Margin(-1, 0, 0, 0),
            stroke: null, strokeWidth: 0, fill: "gray",
            portId: "", cursor: "pointer", fromLinkable: true, toLinkable: true
          },
          new go.Binding("fill", "color", colorFunc)),
        $(go.TextBlock,
          {
            font: "Semi-bold 11px Lato, sans-serif",
            textAlign: "center",
            margin: 3,
            maxSize: new go.Size(120, NaN),
            alignment: go.Spot.Top,
            alignmentFocus: go.Spot.Bottom,
            editable: true
          },
          new go.Binding("text").makeTwoWay())
      )
    );

  // myDiagram.addModelChangedListener(function(evt) {
  //   // ignore unimportant Transaction events
  //   if (!evt.isTransactionFinished) return;
  //   var txn = evt.object;  // a Transaction
  //   if (txn === null) return;
  //   // iterate over all of the actual ChangedEvents of the Transaction
  //   console.log(txn);
  //   console.log(evt);
  //   txn.changes.each(function(e) {
  //     // ignore any kind of change other than adding/removing a node
  //     if (e.modelChange !== "nodeDataArray") return;
  //     // record node insertions and removals
  //     if (e.change === go.ChangedEvent.Insert) {
  //       console.log(evt.propertyName + " added node with key: " + e.newValue.key);
  //     } else if (e.change === go.ChangedEvent.Remove) {
  //       console.log(evt.propertyName + " removed node with key: " + e.oldValue.key);
  //     }
  //   });
  // });

  myDiagram.addDiagramListener("SelectionMoved", function(event) {
    
    var selectedNode = event.diagram.selection.first();
  
    console.log("selectedNode",selectedNode);
    console.log("selectedNodeKey",selectedNode.key);
    console.log("selectedNode", selectedNode.location.toString());
    console.log("selectedNode", selectedNode.location.x);
    console.log("selectedNode", selectedNode.location.y);
    console.log("locationObject", selectedNode.locationObject);

    if (selectedNode instanceof go.Node){ //записываем изменения в нод при движении
      var nodeData = selectedNode.data;
//      console.log(nodeData);

      var nodeType, nodeLayer;

      if (nodeData.icon == "it_metric"){
        nodeType = "metric";
        nodeLayer = "it";
      }else if (nodeData.icon == "it_service"){
        nodeType = "service";
        nodeLayer = "it";
      }else if (nodeData.icon == "bs_service"){
        nodeType = "service";
        nodeLayer = "bs";
      }else if (nodeData.icon == "bu_service"){
        nodeType = "service";
        nodeLayer = "bu";
      }else if (nodeData.icon == "br_service"){
        nodeType = "service";
        nodeLayer = "bt";
      }else if (nodeData.icon == "bp_service"){
        nodeType = "service";
        nodeLayer = "bp";
      }else if (nodeData.icon == "ot_and"){
        nodeType = "and";
        nodeLayer = "ot";
      }else if (nodeData.icon == "ot_or"){
        nodeType = "or";
        nodeLayer = "ot";
      }else{
        nodeType = "";
        nodeLayer = "";
      }
    }

//      var data = '{\
//          "id": "'+nodeData.key+'",\
//          "label": "'+nodeData.caption+'",\
//          "type": "'+nodeType+'",\
//          "layer": "'+nodeLayer+'",\
//          "access": '+nodeData.access+',\
//          "stead": '+nodeData.stead+',\
//          "costdown": '+nodeData.costdown+',\
//          "coordX": '+selectedNode.location.x+',\
//          "coordY": '+selectedNode.location.y+',\
//          "RTO": '+nodeData.RTO+',\
//          "RPO": '+nodeData.RPO+'\
//      }';

//      jQuery.ajax({
//        url: "/proxy.php",
//        type: "POST",
//        //contentType: "application/json; charset=utf-8",
//        data: {"url": "http://dh.bitc.ru:8021/api/v1/nodes/"+nodeData.key+"/", "type": "PUT", "data": data},
//        //dataType: "json",
//        success: function(data){
//          //alert("success: "+data);
//        },
//        error: function(data){
//          alert("error: "+data);
//        }
//      });

    // Django. Cross Site Request Forgery protection¶
    // https://docs.djangoproject.com/en/3.2/ref/csrf/
    function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie != '') {
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = jQuery.trim(cookies[i]);
            if (cookie.substring(0, name.length + 1) == (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
    }

    var csrftoken = getCookie('csrftoken');

    function csrfSafeMethod(method) {
        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
    }

    jQuery.ajaxSetup({
        beforeSend: function(xhr, settings) {
            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                xhr.setRequestHeader("X-CSRFToken", csrftoken);
            }
        }
    });

    var data_request = {
      "id": nodeData.key,
      "label": nodeData.caption,
      "type": nodeType,
      "layer": nodeLayer,
      "access": nodeData.access,
      "stead": nodeData.stead,
      "costdown": nodeData.costdown,
      "coordX": selectedNode.location.x,
      "coordY": selectedNode.location.y,
      "RTO": nodeData.RTO,
      "RPO": nodeData.RPO
    };

    jQuery.ajax({
        url: "http://dh.bitc.ru:8021/api/v1/nodes/"+nodeData.key+"/",
//        url: "http://127.0.0.1:8000/api/v1/nodes/"+nodeData.key+"/",
        type: "PUT",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify(data_request),
        processData: false,
        success: function(data){
//          alert("success: "+data);
        },
        error: function(data){
          alert("error: "+data);
        }
      });

    //Save new location
    // key: selectedNode.key
    // location-x: selectedNode.location.x
    // location-y: selectedNode.location.y
  
  });

  function updatePortHeight(node, link, port) {
    var sideinputs = 0;
    var sideoutputs = 0;
    node.findLinksConnected().each(function(l) {
      if (l.toNode === node && l.toSpot === go.Spot.LeftSide) sideinputs++;
      if (l.fromNode === node && l.fromSpot === go.Spot.RightSide) sideoutputs++;
    });
    var tot = Math.max(sideinputs, sideoutputs);
    tot = Math.max(1, Math.min(tot, 2));
    port.height = tot * (2+2) + 2;  // where 10 is the link path's strokeWidth
  }

  myDiagram.linkTemplate =
    $(go.Link,
      {
        layerName: "Background",
        routing: go.Link.Orthogonal,
        corner: 15,
        reshapable: true,
        resegmentable: true,
        fromSpot: go.Spot.RightSide,
        toSpot: go.Spot.LeftSide,
        toShortLength: 7
      },
      // make sure links come in from the proper direction and go out appropriately
      new go.Binding("fromSpot", "fromSpot", go.Spot.parse),
      new go.Binding("toSpot", "toSpot", go.Spot.parse),
      new go.Binding("points").makeTwoWay(),
      // mark each Shape to get the link geometry with isPanelMain: true
      $(go.Shape, { isPanelMain: true, stroke: "gray", strokeWidth: 5 },
        // get the default stroke color from the fromNode
        new go.Binding("stroke", "fromNode", function(n) { return go.Brush.lighten((n && Colors[n.data.color]) || "gray"); }).ofObject(),
        // but use the link's data.color if it is set
        new go.Binding("stroke", "color", colorFunc)),
      $(go.Shape, { isPanelMain: true, stroke: "white", strokeWidth: 2, name: "PIPE", strokeDashArray: [20, 40] }),
      $(go.Shape, { toArrow: "Triangle", scale: 1.3, fill: "gray", stroke: null },
        new go.Binding("fill", "color", colorFunc)),
    );

  var SpotNames = ["Top", "Left", "Right", "Bottom", "TopSide", "LeftSide", "RightSide", "BottomSide"];

  myDiagram.model = go.Model.fromJson(document.getElementById("mySavedModel").textContent);

  // show a collection of node types that the designer may drag into the main diagram
  myPalette =
    $(go.Palette, "myPaletteDiv",
      {
        layout: $(go.GridLayout, { cellSize: new go.Size(1, 1) }),
        initialContentAlignment: go.Spot.TopLeft,
        initialScale: 0.8,
        nodeTemplate: myDiagram.nodeTemplate,  // shared with the main Diagram
        model: $(go.GraphLinksModel,
          {
            nodeDataArray: [
              { "icon":"it_metric", "text":"Метрики" },
              { "icon":"it_service", "text":"ИТ-ресурсы" },
              { "icon":"bs_service", "text":"Бизнес-системы" },
              { "icon":"bu_service", "text":"Бизнес-услуги" },
              { "icon":"br_service", "text":"Бизнес-решения" },
              { "icon":"bp_service", "text":"Бизнес-процессы" },
              { "icon":"ot_and", "text":"И" },
              { "icon":"ot_or", "text":"ИЛИ" },
              // { "icon":"polymerization", "text":"Basic Polymers" },
              // { "text":"Intermediates" },
              // { "icon":"finishedgas", "text":"LPG, Naphtha,\nMTBE" }
            ]  // end nodeDataArray
          })  // end model
      });  // end Palette

  // show and let the designer edit some data properties of the selected node or link
  myInspector = new Inspector("myInspector", myDiagram,
    {
      properties: {
        key: { show: false },
        pos: { show: false },
        icon: { show: Inspector.showIfNode, type: "select", choices: IconNames },
        color: { type: "select", choices: ColorNames },
        text: { show: Inspector.showIfNode },
        caption: { show: Inspector.showIfNode },
        //imgsrc: { show: Inspector.showIfNode },
        from: { show: false },
        to: { show: false },
        points: { show: false },
        fromSpot: { show: Inspector.showIfLink, type: "select", choices: SpotNames },
        toSpot: { show: Inspector.showIfLink, type: "select", choices: SpotNames }
      },
      propertyModified: onSelectionChanged
    });
}

function onSelectionChanged() {
  var node = myDiagram.selection.first();
  if (!(node instanceof go.Node)) return;
  var data = node.data;
  var image = document.getElementById("Image");
  var title = document.getElementById("Title");
  var description = document.getElementById("Description");

  // if (data.imgsrc) {
  //   image.src = data.imgsrc;
  //   image.alt = data.caption;
  // } else {
  //   image.src = "";
  //   image.alt = "";
  // }
  title.textContent = data.text;
  description.textContent = data.description;
}
function load(){
  $.ajax({
    url: "http://dh.bitc.ru:8021/api/v1/nodesview/?format=json",
//    url: "http://127.0.0.1:8000/api/v1/nodesview/?format=json",
    dataType: "html",
    success: function(data){
      //console.log(data);
      document.getElementById("mySavedModel").textContent = data;
      init();

      var d = new Date();
      $("#dataTime time").text(d);
    }
  });
}
function reload(){
  $.ajax({
    url: "http://dh.bitc.ru:8021/api/v1/nodesview/?format=json",
//    url: "http://127.0.0.1:8000/api/v1/nodesview/?format=json",
    dataType: "html",
    success: function(data){
      document.getElementById("mySavedModel").textContent = data;
      myDiagram.model = go.Model.fromJson(document.getElementById("mySavedModel").textContent);
      
      var d = new Date();
      $("#dataTime time").text(d);
    }
  });
}
window.addEventListener('DOMContentLoaded', function(){
  load();
});